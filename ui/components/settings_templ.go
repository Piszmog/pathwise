// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.920
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Settings(email string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!doctype html><html lang=\"en\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = Head().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<body class=\"min-h-screen flex flex-col\"><main class=\"flex-1\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = header(CurrentPageSettings).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = settings(email).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</main>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = footer().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "</body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func settings(email string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "<style type=\"text/css\">\n\t\tform.htmx-request {\n\t\t\topacity: 0.5;\n\t\t\ttransition: opacity 300ms linear;\n\t\t}\n\t</style><div class=\"divide-y divide\"><div class=\"grid grid-cols-1 gap-x-8 gap-y-10 px-4 py-16 sm:px-6 md:grid-cols-3 lg:px-8\"><div><h2 class=\"text-base font-semibold leading-7\">Personal Information</h2><p class=\"mt-1 text-sm leading-6 text-gray-400\">Your personal information used to identify you on our platform.</p></div><div class=\"md:col-span-2\"><div class=\"grid grid-cols-1 gap-x-6 gap-y-8 sm:max-w-xl sm:grid-cols-6\"><div class=\"col-span-full\"><label for=\"email\" class=\"block text-sm font-medium leading-6 text-gray-900\">Email address</label><div class=\"mt-2\"><input id=\"email\" name=\"email\" type=\"email\" autocomplete=\"email\" readonly class=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-600 sm:text-sm sm:leading-6\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 string
		templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(email)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `settings.templ`, Line: 35, Col: 298}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "\"></div></div></div></div></div><div class=\"grid grid-cols-1 gap-x-8 gap-y-10 px-4 py-16 sm:px-6 md:grid-cols-3 lg:px-8\"><div><h2 class=\"text-base font-semibold leading-7\">Change password</h2><p class=\"mt-1 text-sm leading-6 text-gray-400\">Update your password associated with your account.</p></div><form id=\"change-password-form\" class=\"md:col-span-2\" hx-post=\"/settings/changePassword\" hx-ext=\"response-targets\" hx-target-error=\"#change-password-error\" hx-on::after-request=\"this.reset()\"><div id=\"change-password-error\"></div><div class=\"grid grid-cols-1 gap-x-6 gap-y-8 sm:max-w-xl sm:grid-cols-6\"><div class=\"col-span-full\"><label for=\"currentPassword\" class=\"block text-sm font-medium leading-6 text-gray-900\">Current password</label><div class=\"mt-2\"><input id=\"currentPassword\" name=\"currentPassword\" type=\"password\" autocomplete=\"currentPassword\" required class=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-600 sm:text-sm sm:leading-6\"></div></div><div class=\"col-span-full\"><label for=\"newPassword\" class=\"block text-sm font-medium leading-6 text-gray-900\">New password</label><div class=\"mt-2\"><input id=\"newPassword\" name=\"newPassword\" type=\"password\" autocomplete=\"newPassword\" minLength=\"12\" pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*]).{12,}\" title=\"Must contain at least one number, one uppercase letter, one special character (!@#$%^&*), and at least 12 or more characters\" required class=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-600 sm:text-sm sm:leading-6\"></div></div><div class=\"col-span-full\"><label for=\"confirmPassword\" class=\"block text-sm font-medium leading-6 text-gray-900\">Confirm password</label><div class=\"mt-2\"><input id=\"confirmPassword\" name=\"confirmPassword\" type=\"password\" autocomplete=\"confirmPassword\" minLength=\"12\" pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*]).{12,}\" title=\"Must contain at least one number, one uppercase letter, one special character (!@#$%^&*), and at least 12 or more characters\" required class=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-600 sm:text-sm sm:leading-6\"></div></div></div><div class=\"mt-8 flex\"><button type=\"submit\" class=\"rounded-md bg-blue-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-blue-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-600\">Save</button></div></form></div><div class=\"grid grid-cols-1 gap-x-8 gap-y-10 px-4 py-16 sm:px-6 md:grid-cols-3 lg:px-8\"><div><h2 class=\"text-base font-semibold leading-7\">Log out other sessions</h2><p class=\"mt-1 text-sm leading-6 text-gray-400\">Please enter your password to confirm you would like to log out of your other sessions across all of your devices.</p></div><form id=\"logout-account-form\" class=\"md:col-span-2\" hx-post=\"/settings/logoutSessions\" hx-ext=\"response-targets\" hx-target-error=\"#logout-account-error\" hx-on::after-request=\"this.reset()\"><div id=\"logout-account-error\"></div><div class=\"grid grid-cols-1 gap-x-6 gap-y-8 sm:max-w-xl sm:grid-cols-6\"><div class=\"col-span-full\"><label for=\"password\" class=\"block text-sm font-medium leading-6 text-gray-900\">Your password</label><div class=\"mt-2\"><input id=\"password\" name=\"password\" type=\"password\" autocomplete=\"password\" required class=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-600 sm:text-sm sm:leading-6\"></div></div></div><div class=\"mt-8 flex\"><button type=\"submit\" class=\"rounded-md bg-blue-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-blue-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-600\">Log out other sessions</button></div></form></div><div class=\"grid grid-cols-1 gap-x-8 gap-y-10 px-4 py-16 sm:px-6 md:grid-cols-3 lg:px-8\"><div><h2 class=\"text-base font-semibold leading-7\">Delete account</h2><p class=\"mt-1 text-sm leading-6 text-gray-400\">No longer want to use our service? You can delete your account here. This action is not reversible. All information related to this account will be deleted permanently.</p></div><form id=\"delete-account-form\" class=\"md:col-span-2\" hx-post=\"/settings/deleteAccount\" hx-ext=\"response-targets\" hx-target-error=\"#delete-account-error\" hx-on::after-request=\"this.reset()\"><div id=\"delete-account-error\"></div><div class=\"grid grid-cols-1 gap-x-6 gap-y-8 sm:max-w-xl sm:grid-cols-6\"><div class=\"col-span-full\"><label for=\"password\" class=\"block text-sm font-medium leading-6 text-gray-900\">Your password</label><div class=\"mt-2\"><input id=\"password\" name=\"password\" type=\"password\" autocomplete=\"password\" required class=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-600 sm:text-sm sm:leading-6\"></div></div></div><div class=\"mt-8 flex\"><button type=\"submit\" class=\"rounded-md bg-red-600 px-3 py-2 text-sm text-white font-semibold shadow-sm hover:bg-red-500\">Yes, delete my account</button></div></form></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
