root = "../.."
testdata_dir = "testdata"
tmp_dir = "./tmp"

[build]
  args_bin = []
  bin = "./tmp/mcp"
  cmd = "go build -o ../../tmp/mcp ."
  delay = 1000
  exclude_dir = ["ui/assets/css", "tmp", "cmd/ui/tmp", "vendor", "testdata", "cmd/ui", "ui", "cmd/jobs", "jobs", "bin", "ui/e2e", "goreleaser-dist"]
  exclude_file = ["internal/db/queries/*.go"]
  exclude_regex = ["_test.go",".*_templ.go"]
  exclude_unchanged = true
  follow_symlink = false
  full_bin = "cd ../.. && LOG_LEVEL=debug go tool godotenv ./tmp/mcp"
  include_dir = []
  include_ext = ["go", "sql"]
  include_file = []
  kill_delay = "5s"
  log = "build-errors.log"
  poll = false
  poll_interval = 500
  post_cmd = [
    # https://github.com/cosmtrek/air/issues/534
    "lsof -i :8080 -sTCP:LISTEN | sed 1d | awk '{print $2}' | xargs kill -9",
  ]
  pre_cmd = [
    "lsof -i :8080 -sTCP:LISTEN | sed 1d | awk '{print $2}' | xargs kill -9",
    "cd ../.. && go tool sqlc generate",
  ]
  rerun = true
  rerun_delay = 500
  send_interrupt = true 
  stop_on_error = true

[color]
  app = ""
  build = "yellow"
  main = "magenta"
  runner = "green"
  watcher = "cyan"

[log]
  main_only = false
  time = false

[misc]
  clean_on_exit = false

[screen]
  clear_on_rebuild = false
  keep_scroll = true

[proxy]
  enabled = true
  proxy_port = 8090
  app_port = 8080
